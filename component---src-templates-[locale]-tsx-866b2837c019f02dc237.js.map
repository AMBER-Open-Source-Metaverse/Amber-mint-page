{"version":3,"file":"component---src-templates-[locale]-tsx-866b2837c019f02dc237.js","mappings":"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","sources":["webpack://frontend-starter/./src/components/hero/index.tsx","webpack://frontend-starter/./src/templates/[locale].tsx"],"sourcesContent":["import React from \"react\"\nimport settings from \"../../../config/settings.json\"\nimport Image from \"../image\"\nimport { ExpandedHeroTree } from \"../../../lib/locales\"\nimport useLocales from \"../../hooks/useLocales\"\nimport useHeroStatuses from \"../../hooks/useHeroStatuses\"\nimport bgBlueCurve from \"../../../config/images/bg-blue-curve.svg\"\nimport bgGradientCurve from \"../../../config/images/bg-gradient-curve.svg\"\n\nconst Hero: React.FC<{ heroTree: ExpandedHeroTree }> = ({ heroTree }) => {\n  const { locale } = useLocales()\n  const { saleStatus, userStatus } = useHeroStatuses()\n\n  return (\n    <div className=\"bg-slate-100 pb-40\">\n      <div\n        style={{\n          backgroundImage: `url(${bgGradientCurve})`,\n          backgroundSize: \"contain\",\n          backgroundRepeat: \"no-repeat\",\n          backgroundPosition: \"right\",\n        }}\n      >\n        <div\n          style={{\n            backgroundImage: `url(${bgBlueCurve})`,\n            backgroundSize: \"80% 100%\",\n            backgroundRepeat: \"no-repeat\",\n          }}\n        >\n          <div\n            className=\"px-[8rem] sm:px-[8rem] flex justify-center items-center mx-auto pt-[6.6rem] backdrop-blur-[90px] min-h-[100vh] text-center sm:text-start\"\n            style={{\n              backgroundColor: \"rgba(217, 217, 217, 0.01)\",\n            }}\n          >\n            <div className=\"space-y-8 lg:w-[58%] xl:w-[38%]\">\n              <h1 className=\"text-3xl font-bold text-white\">{locale?.title}</h1>\n              <p className=\"text-sm text-white\">{locale?.description}</p>\n              <div className=\"bg-white active:bg-slate-200 hover:bg-slate-100 | cursor-pointer rounded-3xl p-4 w-max flex justify-between items-center space-x-4 mx-auto md:mx-0\">\n                <div\n                  className=\"rounded-full p-[0.15rem]\"\n                  style={{\n                    background:\n                      \"linear-gradient(42deg, rgb(255, 188, 221) 0%, rgb(255, 211, 202) 50%, rgb(6, 164, 255) 100%)\",\n                  }}\n                >\n                  <div className=\"rounded-full p-[0.15rem] bg-white\">\n                    <div className=\"border-2 border-black rounded-full p-2 bg-[#E3E8FF]\">\n                      <Image src={settings.cardIcon} alt=\"card\" />\n                    </div>\n                  </div>\n                </div>\n                <div>\n                  <h4 className=\"text-sm font-semibold\">{locale?.mint3DNFT}</h4>\n                  <p className=\"text-sm\">{locale?.billedOnce}</p>\n                </div>\n              </div>\n            </div>\n            <Image\n              src={settings.manNft}\n              alt=\"nft-demo\"\n              className=\"h-[80vh] hidden md:block\"\n            />\n          </div>\n        </div>\n      </div>\n\n      <div className=\"w-[40%] md:w-[55%] mx-auto xl:w-[60%]\">\n        <div className=\"pt-12 flex justify-between text-center lg:text-start\">\n          <div className=\"w-[100%] lg:w-[50%] space-y-4\">\n            <h1 className=\"text-3xl font-bold\">{locale?.recentlyMinted}</h1>\n            <div className=\"flex items-center justify-center lg:justify-start space-x-8\">\n              <button\n                className=\"btn btn-sm bg-white btn-outline capitalize rounded-2xl text-xs gap-1 font-bold\"\n                style={{\n                  border: \"1px solid rgba(57, 19, 184, 0.2)\",\n                }}\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-4 w-4\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    d=\"M11 17l-5-5m0 0l5-5m-5 5h12\"\n                  />\n                </svg>\n                {locale?.prevNFT}\n              </button>\n              <button\n                className=\"btn btn-sm bg-white btn-outline capitalize rounded-2xl text-xs gap-1 font-bold visited:text-slate-50\"\n                style={{\n                  border: \"1px solid rgba(57, 19, 184, 0.2)\",\n                }}\n              >\n                {locale?.nextNFT}\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-4 w-4\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    d=\"M13 7l5 5m0 0l-5 5m5-5H6\"\n                  />\n                </svg>\n              </button>\n            </div>\n          </div>\n          <div className=\"w-[50%] hidden lg:block\">\n            <p className=\"text-sm font-semibold\">{locale.mintDescription}</p>\n          </div>\n        </div>\n\n        <div className=\"mt-12 pb-6 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 place-items-center gap-2\">\n          <div className=\"rounded-3xl bg-[#06A4FF] w-[180px] h-[320px] flex justify-center items-center relative\">\n            <Image\n              src={settings.manNft}\n              alt=\"nft-card\"\n              className=\"w-[100%] h-[100%]\"\n            />\n            <div className=\"flex items-center flex-col absolute bg-black/40 w-full bottom-0 rounded-b-3xl h-[48%] backdrop-blur-lg text-white\">\n              <h5 className=\"text-xl font-semibold mt-5\">DJ Smokeout</h5>\n              <p className=\"text-[0.86em] my-2\">Rarity: 335.5</p>\n              <button\n                className=\"btn btn-outline btn-sm bg-white gap-2 font-semibold capitalize rounded-full\"\n                style={{\n                  border: \"1px solid rgba(57, 19, 184, 0.2)\",\n                }}\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-5 w-5\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n                  />\n                </svg>\n                Search\n              </button>\n            </div>\n          </div>\n          <div className=\"rounded-3xl bg-accent w-[180px] h-[320px] flex justify-center items-center relative\">\n            <Image\n              src={settings.manNft}\n              alt=\"nft-card\"\n              className=\"w-[100%] h-[100%]\"\n            />\n            <div className=\"flex items-center flex-col absolute bg-black/40 w-full bottom-0 rounded-b-3xl h-[48%] backdrop-blur-lg text-white\">\n              <h5 className=\"text-xl font-semibold mt-5\">DJ Smokeout</h5>\n              <p className=\"text-[0.86em] my-2\">Rarity: 335.5</p>\n              <button\n                className=\"btn btn-outline btn-sm bg-white gap-2 font-semibold capitalize rounded-full\"\n                style={{\n                  border: \"1px solid rgba(57, 19, 184, 0.2)\",\n                }}\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-5 w-5\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n                  />\n                </svg>\n                Search\n              </button>\n            </div>\n          </div>\n          <div\n            className=\"rounded-3xl w-[180px] h-[320px] flex justify-center items-center relative\"\n            style={{\n              background:\n                \"linear-gradient(224deg, rgb(110, 204, 255) 0%, rgb(255, 211, 202) 70%, rgba(255, 188, 221, 0) 100%)\",\n            }}\n          >\n            <Image\n              src={settings.manNft}\n              alt=\"nft-card\"\n              className=\"w-[100%] h-[100%]\"\n            />\n            <div className=\"flex items-center flex-col absolute bg-black/40 w-full bottom-0 rounded-b-3xl h-[48%] backdrop-blur-lg text-white\">\n              <h5 className=\"text-xl font-semibold mt-5\">DJ Smokeout</h5>\n              <p className=\"text-[0.86em] my-2\">Rarity: 335.5</p>\n              <button\n                className=\"btn btn-outline btn-sm bg-white gap-2 font-semibold capitalize rounded-full\"\n                style={{\n                  border: \"1px solid rgba(57, 19, 184, 0.2)\",\n                }}\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-5 w-5\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n                  />\n                </svg>\n                Search\n              </button>\n            </div>\n          </div>\n          <div className=\"rounded-3xl bg-[#06A4FF] w-[180px] h-[320px] flex justify-center items-center relative\">\n            <Image\n              src={settings.manNft}\n              alt=\"nft-card\"\n              className=\"w-[100%] h-[100%]\"\n            />\n            <div className=\"flex items-center flex-col absolute bg-black/40 w-full bottom-0 rounded-b-3xl h-[48%] backdrop-blur-lg text-white\">\n              <h5 className=\"text-xl font-semibold mt-5\">DJ Smokeout</h5>\n              <p className=\"text-[0.86em] my-2\">Rarity: 335.5</p>\n              <button\n                className=\"btn btn-outline btn-sm bg-white gap-2 font-semibold capitalize rounded-full\"\n                style={{\n                  border: \"1px solid rgba(57, 19, 184, 0.2)\",\n                }}\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-5 w-5\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n                  />\n                </svg>\n                Search\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Hero\n","import settings from \"../../config/settings.json\"\nimport React, { useEffect, useState } from \"react\"\nimport { PageProps, navigate } from \"gatsby\"\nimport * as naj from \"near-api-js\"\nimport { near, wallet } from \"../near\"\n\nimport { fill } from \"../../lib/locales/runtimeUtils\"\nimport Hero from \"../components/hero\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Markdown from \"../components/markdown\"\nimport Image from \"../components/image\"\nimport type { DecoratedLocale } from \"../../lib/locales\"\nimport useTenk from \"../hooks/useTenk\"\nimport useImageData from \"../hooks/useImageData\"\nimport useHeroStatuses from \"../hooks/useHeroStatuses\"\nimport { Token } from \"../near/contracts/tenk\"\n\ntype PageContext = {\n  locale: DecoratedLocale\n}\n\nfunction hasSuccessValue(obj: {}): obj is { SuccessValue: string } {\n  return \"SuccessValue\" in obj\n}\n\nasync function getTokenIDsForTxHash(\n  txHash: string\n): Promise<string[] | undefined> {\n  const rpc = new naj.providers.JsonRpcProvider(near.config.nodeUrl)\n  const tx = await rpc.txStatus(txHash, wallet.getAccountId())\n  if (!hasSuccessValue(tx.status)) return undefined\n  const base64Result = tx.status.SuccessValue\n  const result = atob(base64Result)\n  const tokens = JSON.parse(result) as Token[]\n  return tokens.map(token => token.token_id)\n}\n\nconst currentUser = wallet.getAccountId()\n\nconst Landing: React.FC<PageProps<{}, PageContext>> = ({\n  location,\n  pageContext: { locale },\n}) => {\n  const tenkData = useTenk()\n  const { image } = useImageData(settings.image)\n\n  const params = new URLSearchParams(location.search)\n  const transactionHashes = params.get(\"transactionHashes\") ?? undefined\n  const [tokensMinted, setTokensMinted] = useState<string[]>()\n  const { saleStatus, userStatus } = useHeroStatuses()\n\n  const data = {\n    ...tenkData,\n    currentUser,\n    locale,\n    saleStatus,\n    userStatus,\n  }\n\n  useEffect(() => {\n    if (!transactionHashes) return\n    getTokenIDsForTxHash(transactionHashes).then(setTokensMinted)\n  }, [transactionHashes])\n\n  return (\n    <>\n      <Layout style={{ filter: transactionHashes && \"blur(4px)\" }}>\n        <Seo\n          lang={locale.id}\n          siteTitle={settings.siteTitle}\n          description={locale.description}\n          favicon={tenkData.contractMetadata?.icon}\n          image={image?.publicURL ?? undefined}\n        />\n        <Hero heroTree={locale.hero} />\n        {/* {locale.extraSections?.map((section, i) => (\n          <Section key={i} {...section}>\n            <Markdown children={fill(section.text, data)} />\n            {section.blocks && (\n              <div className=\"grid\">\n                {section.blocks.map(({ linkTo, text, image }, j) => {\n                  const El = linkTo ? \"a\" : \"div\"\n                  const props = linkTo && { href: linkTo, target: \"_blank\" }\n                  return (\n                    <El key={j} {...props}>\n                      {image && (\n                        <div className=\"image\">\n                          <Image src={image} alt=\"\" />\n                        </div>\n                      )}\n                      {text && (\n                        <div className=\"text\">\n                          <Markdown children={fill(text, data)} />\n                        </div>\n                      )}\n                    </El>\n                  )\n                })}\n              </div>\n            )}\n          </Section>\n        ))} */}\n      </Layout>\n      {/* {transactionHashes && (\n        <MyNFTs\n          onClose={() => navigate(`/${locale.id}`)}\n          highlight={tokensMinted}\n        />\n      )} */}\n    </>\n  )\n}\n\nexport default Landing\n"],"names":["heroTree","locale","useLocales","useHeroStatuses","saleStatus","userStatus","React","className","style","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","backgroundColor","title","description","background","Image","src","settings","alt","mint3DNFT","billedOnce","recentlyMinted","border","xmlns","fill","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","prevNFT","nextNFT","mintDescription","hasSuccessValue","obj","getTokenIDsForTxHash","txHash","_context","rpc","naj","near","txStatus","wallet","tx","status","undefined","base64Result","SuccessValue","result","atob","tokens","JSON","parse","map","token","token_id","currentUser","location","pageContext","tenkData","useTenk","image","useImageData","transactionHashes","URLSearchParams","search","get","useState","setTokensMinted","useEffect","then","Layout","filter","Seo","lang","id","siteTitle","favicon","contractMetadata","_tenkData$contractMet","icon","publicURL","Hero","hero"],"sourceRoot":""}